"""
Django settings for ComPodium project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _
from competitions.tinymce import TINYMCE_DEFAULT_CONFIG
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

TINYMCE_DEFAULT_CONFIG = TINYMCE_DEFAULT_CONFIG

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),  # This is your app's static directory
]

META_SITE_PROTOCOL = 'https'
META_USE_SITES = True
META_DEFAULT_KEYWORDS = [
    "strongman competition",
    "strongman event",
    "strongman contests near me",
    "amateur strongman",
    "Texas strongman",
    "beginner strongman",
    "strongman registration",
    "how to train for strongman",
    "strongman scoring",
    'find a strongman competition',
    "strongman weight classes",
    "run a strongman competition",
    "Atlas Competition",
]

META_INCLUDE_KEYWORDS = ['keywords']
META_INCLUDE_PROPERTIES = ['og:type', 'og:title', 'og:description', 'og:image', 'og:url']


UNFOLD = {
    'SITE_TITLE': 'Atlas Competition',
    'SITE_HEADER': 'Atlas Competition Admin',
    'SITE_URL': '/dashboard/',
    'SITE_ICON': lambda request: static('images/favicon.svg'),
    'DASHBOARD_CALLBACK': 'core.dashboard.dashboard_callback',

    # ——————— Sidebar navigation ———————
    'SIDEBAR': {
        'navigation': [
            {
                'title': _('Main'),
                'items': [
                    {'title': _('Dashboard'),      'icon': 'dashboard',       'link': reverse_lazy('admin:index')},
                    {'title': _('Users'),          'icon': 'people',          'link': reverse_lazy('admin:accounts_user_changelist')},
                    {'title': _('Nationals Qualifiers'), 'icon': 'military_tech', 'link': reverse_lazy('admin:competitions_nationalsqualifier_changelist')},
                    {'title': _('Competitions'),   'icon': 'calendar_today',  'link': reverse_lazy('admin:competitions_competition_changelist')},
                    {'title': _('Registrations'),  'icon': 'how_to_reg',      'link': reverse_lazy('admin:competitions_athletecompetition_changelist')},

                    # — your new entries —
                    {'title': _('Events'),         'icon': 'event',           'link': reverse_lazy('admin:competitions_event_changelist')},
                    {'title': _('Tags'),           'icon': 'label',           'link': reverse_lazy('admin:competitions_tag_changelist')},
                    {'title': _('Tokens'),         'icon': 'vpn_key',         'link': reverse_lazy('admin:authtoken_token_changelist')},
                    {'title': _('Federations'),    'icon': 'public',          'link': reverse_lazy('admin:competitions_federation_changelist')},
                    {'title': _('Results'),        'icon': 'bar_chart',       'link': reverse_lazy('admin:competitions_result_changelist')},
                    {'title': _('T-Shirt Sizes'),  'icon': 'checkroom',       'link': reverse_lazy('admin:competitions_tshirtsize_changelist')},
                    {'title': _('Weight Classes'), 'icon': 'fitness_center',  'link': reverse_lazy('admin:competitions_weightclass_changelist')},
                    {'title': _('Event Bases'),    'icon': 'layers',          'link': reverse_lazy('admin:competitions_eventbase_changelist')},
                ],
            },
        ],
    },

    # ——————— Custom CSS only lives here ———————
    'STYLES': [
        # either:
        '/static/css/admin-custom.css',
        # or, if you prefer the static() helper, wrap it:
        # lambda request: static('css/admin-custom.css'),
    ],
}

# Load Chart.js for dashboard charts
UNFOLD.setdefault("SCRIPTS", []).append(
    "https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"
)

# Keep your existing STYLES entry here (e.g. admin-custom.css)

# Point Unfold at your new dashboard callback
UNFOLD["DASHBOARD_CALLBACK"] = "core.dashboard.dashboard_callback"
UNFOLD["SITE_ICON"] = "https://atlascompetition.com/static/images/navabarlogo.png"


STRIPE_SECRET_KEY      = config('STRIPE_SECRET_KEY')
STRIPE_PUBLISHABLE_KEY = config('STRIPE_PUBLISHABLE_KEY')
STRIPE_CLIENT_ID       = config('STRIPE_CLIENT_ID')
STRIPE_WEBHOOK_SECRET  = config('STRIPE_WEBHOOK_SECRET')

# Twilio
# TWILIO_ACCOUNT_SID = config('TWILIO_ACCOUNT_SID')
# TWILIO_AUTH_TOKEN = config('TWILIO_AUTH_TOKEN')
# TWILIO_PHONE_NUMBER = config('TWILIO_PHONE_NUMBER')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!


INSTALLED_APPS = [
    'unfold',
    'unfold.contrib.filters',
    'accounts',
    'django.contrib.auth',
    'django.contrib.admin',
    'django.contrib.sitemaps',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'django_extensions',

    'axes',
    'corsheaders',
    'django_cotton',
    'django_bootstrap5',
    'competitions',
    'phonenumber_field',
    'tinymce',
    'crispy_forms',
    'crispy_bootstrap5',
    'django_filters',
    'channels',
    'chat',
    'core',
    'widget_tweaks',
    'rest_framework',
    'rest_framework.authtoken',
    'drf_spectacular',
    'django_select2',
    'stripe',
    'meta',

]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'ComPodium.urls'

CORS_ALLOW_ALL_ORIGINS = True

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'debug' : True,
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'core.context_processors.default_meta',
            ],
        },
    },
]

WSGI_APPLICATION = 'ComPodium.wsgi.application'


#



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/




DATA_UPLOAD_MAX_MEMORY_SIZE = 4 * 1024 * 1024
FILE_UPLOAD_MAX_MEMORY_SIZE = 4 * 1024 * 1024

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'axes.backends.AxesBackend',
]

LOGIN_REDIRECT_URL = 'home'  # Replace 'home' with your desired URL after login
LOGOUT_REDIRECT_URL = 'home'  # Replace 'home' with your desired URL after logout

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        '': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # Optional for admin login
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Atlas Competition API',
    'DESCRIPTION': 'API for accessing competition, athlete, and scoring data for live streaming.',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': True,  # Include schema in Swagger UI
    'SWAGGER_UI_SETTINGS': {
        'deepLinking': True,
        'persistAuthorization': True,  # Keeps token between requests
        'displayOperationId': True,
    },
    'SECURITY': [{
        'TokenAuth': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
            'description': 'Token-based authentication with format: Token <token>',
        }
    }],
}





AXES_FAILURE_LIMIT = 5  # Number of failed login attempts before lockout
AXES_COOLOFF_TIME = 1  # Lockout duration in hours (e.g., 1 hour)
AXES_LOCK_OUT_BY_COMBINATION_USER_AND_IP = True  # Lock out by username and IP address

PHONENUMBER_DEFAULT_REGION = "US"


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'uploads'

CRISPY_ALLOWED_TEMPLATE_PACKS = "bootstrap5"

CRISPY_TEMPLATE_PACK = "bootstrap5"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}

OPENAI_API_KEY = config("OPENAI_API_KEY")
